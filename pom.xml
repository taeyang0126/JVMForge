<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lei.java</groupId>
    <artifactId>forge</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>24</maven.compiler.source>
        <maven.compiler.target>24</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jmh.version>1.36</jmh.version>
        <rxjava.version>3.1.5</rxjava.version>
        <reactor.version>3.5.6</reactor.version>
        <wiremock.version>2.35.1</wiremock.version>
        <httpasyncclient.version>4.1.5</httpasyncclient.version>
        <okhttp.version>4.10.0</okhttp.version>
        <testcontainers.version>1.19.3</testcontainers.version>
        <reactor-netty.version>1.0.35</reactor-netty.version>
        <spring.version>5.3.29</spring.version>
        <vertx.version>4.4.4</vertx.version>
        <lombok.version>1.18.38</lombok.version>
        <toxiproxy.version>1.18.3</toxiproxy.version>
        <junit.version>5.9.3</junit.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <java.version>24</java.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
        </dependency>

        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.reactivex.rxjava3</groupId>
            <artifactId>rxjava</artifactId>
            <version>${rxjava.version}</version>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>${reactor.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>${wiremock.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpasyncclient</artifactId>
            <version>${httpasyncclient.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>

        <!-- TestContainers 核心依赖 -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>toxiproxy</artifactId>
            <version>${toxiproxy.version}</version>
        </dependency>

        <!-- JUnit 5 集成 -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
        </dependency>

        <!-- JUnit 5 核心依赖 -->
<!--        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
        </dependency>-->

        <!-- Spring WebFlux -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webflux</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Reactor Core -->
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>${reactor.version}</version>
        </dependency>

        <!-- Reactor Netty - HTTP Client 实现 -->
        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty-http</artifactId>
            <version>${reactor-netty.version}</version>
        </dependency>

        <!-- Vert.x Core -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <!-- Vert.x Web Client -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.17.2</version>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver-dns-native-macos</artifactId>
            <version>4.1.107.Final</version> <!-- 使用最新稳定版本或与你现有 Netty 匹配的版本 -->
            <classifier>osx-aarch_64</classifier> <!-- 对于 Apple Silicon Mac -->
            <scope>runtime</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--编译配置，指定开启 enable-preview -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <compilerArgs>
                        <arg>--enable-preview</arg> <!-- 如果您使用预览功能 -->
                        <arg>--add-exports=java.base/jdk.internal.misc=ALL-UNNAMED</arg>
                        <arg>--add-exports=java.base/jdk.internal.vm=ALL-UNNAMED</arg>
                        <arg>--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED</arg>
                        <arg>--add-exports=java.base/sun.nio.ch=ALL-UNNAMED</arg>
                        <arg>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <encoding>${maven.compiler.encoding}</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <meminitial>100m</meminitial>
                    <maxmem>200m</maxmem>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!--
                配置测试运行器 (Surefire)
                @Test 方法自动添加 VM 参数
             -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <!--
                      使用 <argLine> 将 -add-exports 作为 JVM 参数传递给测试进程。
                      多个参数需要写在同一行，或者使用 @{argLine} 变量追加。
                    -->
                    <argLine>
                        --add-exports=java.base/jdk.internal.misc=ALL-UNNAMED
                        --add-exports=java.base/jdk.internal.vm=ALL-UNNAMED
                        --add-exports=java.base/jdk.internal.ref=ALL-UNNAMED
                        --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                        --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                        --enable-preview
                        --enable-native-access=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>